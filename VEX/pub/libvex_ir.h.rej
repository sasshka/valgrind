--- VEX/pub/libvex_ir.h
+++ VEX/pub/libvex_ir.h
@@ -230,7 +229,10 @@ typedef
       Ity_D128,  /* 128-bit Decimal floating point */
       Ity_F128,  /* 128-bit floating point; implementation defined */
       Ity_V128,  /* 128-bit SIMD */
-      Ity_V256   /* 256-bit SIMD */
+      Ity_V256,  /* 256-bit SIMD */
+#ifdef AVX_512
+      Ity_V512,  /* 512-bit SIMD */
+#endif
    }
    IRType;
 
@@ -276,8 +278,11 @@ typedef
                     as a IEEE754 double value. */
       Ico_V128,  /* 128-bit restricted vector constant, with 1 bit
                     (repeated 8 times) for each of the 16 x 1-byte lanes */
-      Ico_V256   /* 256-bit restricted vector constant, with 1 bit
+      Ico_V256,   /* 256-bit restricted vector constant, with 1 bit
                     (repeated 8 times) for each of the 32 x 1-byte lanes */
+#ifdef AVX_512
+      Ico_V512,
+#endif
    }
    IRConstTag;
 
@@ -300,6 +305,9 @@ typedef
          ULong  F64i;
          UShort V128;   /* 16-bit value; see Ico_V128 comment above */
          UInt   V256;   /* 32-bit value; see Ico_V256 comment above */
+#ifdef AVX_512
+         ULong  V512;   /* 64-bit value; see Ico_V512 comment above */
+#endif
       } Ico;
    }
    IRConst;
@@ -316,6 +324,9 @@ extern IRConst* IRConst_F64  ( Double );
 extern IRConst* IRConst_F64i ( ULong );
 extern IRConst* IRConst_V128 ( UShort );
 extern IRConst* IRConst_V256 ( UInt );
+#ifdef AVX_512
+extern IRConst* IRConst_V512 ( ULong );
+#endif
 
 /* Deep-copy an IRConst */
 extern IRConst* deepCopyIRConst ( const IRConst* );
@@ -1951,7 +1962,6 @@ typedef
       Iop_ShlN16x16, Iop_ShlN32x8, Iop_ShlN64x4,
       Iop_ShrN16x16, Iop_ShrN32x8, Iop_ShrN64x4,
       Iop_SarN16x16, Iop_SarN32x8,
-
       Iop_Max8Sx32, Iop_Max16Sx16, Iop_Max32Sx8,
       Iop_Max8Ux32, Iop_Max16Ux16, Iop_Max32Ux8,
       Iop_Min8Sx32, Iop_Min16Sx16, Iop_Min32Sx8,
@@ -2000,10 +2010,18 @@ typedef
       Iop_Max32Fx8, Iop_Min32Fx8,
       Iop_Max64Fx4, Iop_Min64Fx4,
       Iop_Rotx32, Iop_Rotx64,
-      Iop_LAST      /* must be the last enumerator */
+#ifdef AVX_512
+      Iop_LAST_NOT_EVEX,      /* must be the last enumerator */
+#else
+      Iop_LAST,               /* must be the last enumerator */
+#endif
    }
    IROp;
 
+#ifdef AVX_512
+#include "libvex_ir_AVX512.h"
+#endif
+
 /* Pretty-print an op. */
 extern void ppIROp ( IROp );
 
